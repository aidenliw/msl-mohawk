@*@model IEnumerable<MSL_APP.Models.ProductKeyLog>*@
@using MSL_APP.Utility
@model PaginatedList<MSL_APP.Models.ProductKeyLog>
@{
    ViewData["Title"] = "Log";
}

<h1>Product Key Log</h1>

<table class="table">
    <thead>
        <tr>
            <th>
                <div class="col-md-5">
                    <form asp-action="Index">
                        <div class="input-group mb-3">
                            <input type="text" class="form-control" name="search" placeholder="Email, ID, Product, Key" aria-label="Search Log">
                            <div class="input-group-append">
                                <button type="submit" class="btn btn-outline-primary" id="searchUserButton">Search</button>
                            </div>
                        </div>
                    </form>
                </div>
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                @if (item.Action == "GetKey")
                {
                    <td>
                        Account <b style="color:dodgerblue">@item.StudentEmail (@item.StudentId)</b>  got key <b style="color:darkgray">[@item.ProductKey]</b> from <b style="color:dodgerblue"> @item.ProductName</b> at <b style="color:dodgerblue">@item.TimeStamp</b>.
                    </td>
                }
                <td>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger btn-sm">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "invisible" : "";
    var nextDisabled = !Model.HasNextPage ? "invisible" : "";
    var indexDisableed = !Model.HasPreviousPage && !Model.HasNextPage ? "d-none" : "";
    var totalPages = Model.TotalPages;
    var centerIndex = Model.PageIndex;
    var maxPages = 10;
    if (totalPages < maxPages) { maxPages = totalPages; }
    if (centerIndex <= 5)
    {
        centerIndex = 1;
    }
    else if (centerIndex > 5 && centerIndex <= totalPages - 5)
    {
        centerIndex = centerIndex - 5;
    }
    else
    {
        centerIndex = totalPages - 9;
    }
}
<div class="row ">
    <div class="dropdown mx-1">
        <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Page Size
        </button>
        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            <a asp-action="Index" asp-route-sortBy="@ViewData["CurrentSort"]" asp-route-pageNumber=1 asp-route-pageRow=10 asp-route-currentFilter="@ViewData["CurrentFilter"]" class="dropdown-item">10 Rows</a>
            <a asp-action="Index" asp-route-sortBy="@ViewData["CurrentSort"]" asp-route-pageNumber=1 asp-route-pageRow=20 asp-route-currentFilter="@ViewData["CurrentFilter"]" class="dropdown-item">20 Rows</a>
            <a asp-action="Index" asp-route-sortBy="@ViewData["CurrentSort"]" asp-route-pageNumber=1 asp-route-pageRow=50 asp-route-currentFilter="@ViewData["CurrentFilter"]" class="dropdown-item">50 Rows</a>
            <a asp-action="Index" asp-route-sortBy="@ViewData["CurrentSort"]" asp-route-pageNumber=1 asp-route-pageRow=-1 asp-route-currentFilter="@ViewData["CurrentFilter"]" class="dropdown-item">All</a>
        </div>
    </div>
    <a asp-action="Index"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-pageRow="@ViewData["totalRow"]"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="mx-1 btn btn-primary @prevDisabled">
        Previous
    </a>
    @for (int i = centerIndex; i < centerIndex + maxPages; i++)
    {
        if (i == Model.PageIndex)
        {
            <a asp-action="Index"
               asp-route-pageNumber=@i
               asp-route-pageRow="@ViewData["totalRow"]"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="mx-1 btn btn-primary @indexDisableed">
                @i
            </a>
        }
        else
        {
            <a asp-action="Index"
               asp-route-pageNumber=@i
               asp-route-pageRow="@ViewData["totalRow"]"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="mx-1 btn btn-outline-primary @indexDisableed">
                @i
            </a>
        }

    }
    <a asp-action="Index"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-pageRow="@ViewData["totalRow"]"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="mx-1 btn btn-primary @nextDisabled">
        Next
    </a>
</div>